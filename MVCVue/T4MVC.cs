// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly ComponentsClass s_Components = new ComponentsClass();
    public static ComponentsClass Components { get { return s_Components; } }
    static readonly HospClass s_Hosp = new HospClass();
    public static HospClass Hosp { get { return s_Hosp; } }
    public static MVCVue.Controllers.HomeController Home = new MVCVue.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ComponentsClass
    {
        public readonly string Name = "Components";
        public MVCVue.Areas.Components.Controllers.DefaultController Default = new MVCVue.Areas.Components.Controllers.T4MVC_DefaultController();
        public MVCVue.Areas.Components.Controllers.FormController Form = new MVCVue.Areas.Components.Controllers.T4MVC_FormController();
        public T4MVC.Components.SharedController Shared = new T4MVC.Components.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class HospClass
    {
        public readonly string Name = "Hosp";
        public MVCVue.Areas.Hosp.Controllers.BodyController Body = new MVCVue.Areas.Hosp.Controllers.T4MVC_BodyController();
        public MVCVue.Areas.Hosp.Controllers.FormController Form = new MVCVue.Areas.Hosp.Controllers.T4MVC_FormController();
        public T4MVC.Hosp.SharedController Shared = new T4MVC.Hosp.SharedController();
    }
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string ai_0_22_9_build00167_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ai.0.22.9-build00167.min.js") ? Url("ai.0.22.9-build00167.min.js") : Url("ai.0.22.9-build00167.js");
        public static readonly string ai_0_22_9_build00167_min_js = Url("ai.0.22.9-build00167.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap4 {
            public const string UrlPath = "~/Scripts/bootstrap4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.bundle.min.js") ? Url("bootstrap.bundle.min.js") : Url("bootstrap.bundle.js");
            public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
            public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
            public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
            public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
            public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        }
    
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
        public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.1.1.intellisense.min.js") ? Url("jquery-2.1.1.intellisense.min.js") : Url("jquery-2.1.1.intellisense.js");
        public static readonly string jquery_2_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.1.1.min.js") ? Url("jquery-2.1.1.min.js") : Url("jquery-2.1.1.js");
        public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
        public static readonly string jquery_2_1_1_min_map = Url("jquery-2.1.1.min.map");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Vue {
            public const string UrlPath = "~/Scripts/Vue";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string polyfill_min_js = Url("polyfill.min.js");
            public static readonly string Sortable_min_js = Url("Sortable.min.js");
            public static readonly string vue_bootstrap_datetimepicker_min_js = Url("vue-bootstrap-datetimepicker.min.js");
            public static readonly string vue_resource_common_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vue-resource.common.min.js") ? Url("vue-resource.common.min.js") : Url("vue-resource.common.js");
            public static readonly string vue_resource_es2015_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vue-resource.es2015.min.js") ? Url("vue-resource.es2015.min.js") : Url("vue-resource.es2015.js");
            public static readonly string vue_resource_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vue-resource.min.js") ? Url("vue-resource.min.js") : Url("vue-resource.js");
            public static readonly string vue_resource_min_js = Url("vue-resource.min.js");
            public static readonly string vue_router_min_js = Url("vue-router.min.js");
            public static readonly string vue_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vue-select.min.js") ? Url("vue-select.min.js") : Url("vue-select.js");
            public static readonly string vue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vue.min.js") ? Url("vue.min.js") : Url("vue.js");
            public static readonly string vue_min_js = Url("vue.min.js");
            public static readonly string vuedraggable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vuedraggable.min.js") ? Url("vuedraggable.min.js") : Url("vuedraggable.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap4 {
            public const string UrlPath = "~/Content/bootstrap4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-grid.min.css") ? Url("bootstrap-grid.min.css") : Url("bootstrap-grid.css");
            public static readonly string bootstrap_grid_css_map = Url("bootstrap-grid.css.map");
            public static readonly string bootstrap_grid_min_css = Url("bootstrap-grid.min.css");
            public static readonly string bootstrap_grid_min_css_map = Url("bootstrap-grid.min.css.map");
            public static readonly string bootstrap_reboot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-reboot.min.css") ? Url("bootstrap-reboot.min.css") : Url("bootstrap-reboot.css");
            public static readonly string bootstrap_reboot_css_map = Url("bootstrap-reboot.css.map");
            public static readonly string bootstrap_reboot_min_css = Url("bootstrap-reboot.min.css");
            public static readonly string bootstrap_reboot_min_css_map = Url("bootstrap-reboot.min.css.map");
            public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
            public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fontawesome {
            public const string UrlPath = "~/Content/fontawesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fontawesome_free_all_min_css = Url("fontawesome-free_all.min.css");
        }
    
        public static readonly string fonts_googleapis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fonts.googleapis.min.css") ? Url("fonts.googleapis.min.css") : Url("fonts.googleapis.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class webfonts {
            public const string UrlPath = "~/Content/webfonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fa_brands_400_eot = Url("fa-brands-400.eot");
            public static readonly string fa_brands_400_svg = Url("fa-brands-400.svg");
            public static readonly string fa_brands_400_ttf = Url("fa-brands-400.ttf");
            public static readonly string fa_brands_400_woff = Url("fa-brands-400.woff");
            public static readonly string fa_brands_400_woff2 = Url("fa-brands-400.woff2");
            public static readonly string fa_regular_400_eot = Url("fa-regular-400.eot");
            public static readonly string fa_regular_400_svg = Url("fa-regular-400.svg");
            public static readonly string fa_regular_400_ttf = Url("fa-regular-400.ttf");
            public static readonly string fa_regular_400_woff = Url("fa-regular-400.woff");
            public static readonly string fa_regular_400_woff2 = Url("fa-regular-400.woff2");
            public static readonly string fa_solid_900_eot = Url("fa-solid-900.eot");
            public static readonly string fa_solid_900_svg = Url("fa-solid-900.svg");
            public static readonly string fa_solid_900_ttf = Url("fa-solid-900.ttf");
            public static readonly string fa_solid_900_woff = Url("fa-solid-900.woff");
            public static readonly string fa_solid_900_woff2 = Url("fa-solid-900.woff2");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class bootstrap4 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_bundle_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap4/bootstrap.bundle.js"); 
                    public static readonly string bootstrap_bundle_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap4/bootstrap.bundle.min.js"); 
                    public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap4/bootstrap.js"); 
                    public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap4/bootstrap.min.js"); 
                }
            }
            public static partial class Vue 
            {
                public static class Assets
                {
                    public static readonly string polyfill_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/polyfill.min.js"); 
                    public static readonly string Sortable_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/Sortable.min.js"); 
                    public static readonly string vue_bootstrap_datetimepicker_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-bootstrap-datetimepicker.min.js"); 
                    public static readonly string vue_resource_common_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-resource.common.js"); 
                    public static readonly string vue_resource_es2015_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-resource.es2015.js"); 
                    public static readonly string vue_resource_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-resource.js"); 
                    public static readonly string vue_resource_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-resource.min.js"); 
                    public static readonly string vue_router_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-router.min.js"); 
                    public static readonly string vue_select_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue-select.js"); 
                    public static readonly string vue_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue.js"); 
                    public static readonly string vue_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vue.min.js"); 
                    public static readonly string vuedraggable_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Vue/vuedraggable.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string _references_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/_references.js"); 
                public static readonly string ai_0_22_9_build00167_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/ai.0.22.9-build00167.js"); 
                public static readonly string ai_0_22_9_build00167_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/ai.0.22.9-build00167.min.js"); 
                public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-1.10.2.intellisense.js"); 
                public static readonly string jquery_1_10_2_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-1.10.2.js"); 
                public static readonly string jquery_1_10_2_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-1.10.2.min.js"); 
                public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.intellisense.js"); 
                public static readonly string jquery_2_1_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.js"); 
                public static readonly string jquery_2_1_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.min.js"); 
                public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.js"); 
                public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.min.js"); 
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.js"); 
                public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.min.js"); 
                public static readonly string modernizr_2_6_2_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/modernizr-2.6.2.js"); 
                public static readonly string respond_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/respond.js"); 
                public static readonly string respond_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/respond.min.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class bootstrap4 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_grid_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap-grid.css");
                    public static readonly string bootstrap_grid_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap-grid.min.css");
                    public static readonly string bootstrap_reboot_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap-reboot.css");
                    public static readonly string bootstrap_reboot_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap-reboot.min.css");
                    public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap.css");
                    public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap4/bootstrap.min.css");
                }
            }
            public static partial class fontawesome 
            {
                public static class Assets
                {
                    public static readonly string fontawesome_free_all_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/fontawesome/fontawesome-free_all.min.css");
                }
            }
            public static partial class webfonts 
            {
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.css");
                public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.min.css");
                public static readonly string fonts_googleapis_css = T4MVCHelpers.ProcessAssetPath("~/Content/fonts.googleapis.css");
                public static readonly string Site_css = T4MVCHelpers.ProcessAssetPath("~/Content/Site.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


